service: milknthingzz
image: soadaa56/milknthingzz

servers:
  web:
    hosts:
      - 18.190.159.197
    labels:
      traefik.http.routers.milknthingzz.entrypoints: websecure
      traefik.http.routers.milknthingzz.rule: Host(`milknthingzz.xyz`)
      traefik.http.routers.milknthingzz.tls.certresolver: letsencrypt

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "soadhlh@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web


registry:
  username: "soadaa56"
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  clear:
    POSTGRES_HOST: 18.190.159.197
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD

builder:
  args:
    RUBY_VERSION: 3.1.2
  remote:
    arch: amd64

asset_path: /rails/public/assets
    
accessories:
  db:
    image: postgres:15
    host: 18.190.159.197
    port: 5432
    env:
      clear:
        POSTGRES_USER: "soadaa"
        POSTGRES_DB: "soadaa_production"
      secret:
        - POSTGRES_PASSWORD
    files:
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
        
ssh:
  user: ubuntu

aws:
  region: us-east-2
  access_key_id: 
    - AWS_ACCESS_KEY_ID
  secret_access_key: 
    - AWS_SECRET_ACCESS_KEY

volumes:
  - "storage:/rails/storage"

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# If your app is using the Sprockets gem, ensure it sets `config.assets.manifest`.
# See https://github.com/basecamp/kamal/issues/626 for details
# config.assets.manifest = Rails.root.join('config', 'manifest.json')

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web
