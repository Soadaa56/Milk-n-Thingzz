service: milknthingzz
image: soadaa56/milknthingzz

servers:
  web:
    hosts:
      - 3.16.156.219
    labels:
      traefik.http.routers.milknthingzz.entrypoints: websecure
      traefik.http.routers.milknthingzz.rule: Host(`milknthingzz.xyz`)
      traefik.http.routers.milknthingzz.tls.certresolver: letsencrypt
      # Redirect www -> main domain
      raefik.http.routers.www-milknthingzz.rule: Host(`www.milknthingzz.xyz`)
      traefik.http.routers.www-milknthingzz.entrypoints: websecure
      traefik.http.routers.www-milknthingzz.tls.certresolver: letsencrypt
      traefik.http.routers.www-milknthingzz.middlewares: www-to-root

      traefik.http.middlewares.www-to-root.redirectregex.regex: ^https://www\.milknthingzz\.xyz/(.*)
      traefik.http.middlewares.www-to-root.redirectregex.replacement: https://milknthingzz.xyz/$${1}
      traefik.http.middlewares.www-to-root.redirectregex.permanent: true

# Newer Kamal 2 configs
proxy:
  ssl: true
  host: milknthingzz.xyz
  app_port: 3000

registry:
  username: "soadaa56"
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  clear:
    POSTGRES_HOST: "milknthingzz-db"
    POSTGRES_USER: "soadaa"
    POSTGRES_DB: "soadaa_production"  
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY

builder:
  args:
    RUBY_VERSION: 3.2.7
  arch:
    - amd64
  secrets:
    - RAILS_MASTER_KEY

volumes:
  - "storage:/rails/storage"
  - "uploads:/rails/public/uploads"
asset_path: /rails/public/assets
    
accessories:
  db: 
    image: postgres:15
    host: 3.16.156.219
    port: 5432
    env:
      clear:
        POSTGRES_USER: "soadaa"
        POSTGRES_DB: "soadaa_production"
        POSTGRES_HOST: "milknthingzz-db"
      secret:
        - POSTGRES_PASSWORD
    files:
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
        
ssh:
  user: ubuntu
  keys:
    - ~/.ssh/milknthingzz-key.pem